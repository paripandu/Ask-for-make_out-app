import boto3
import os

# Set AWS credentials and region using os.environ
os.environ['AWS_ACCESS_KEY_ID'] = "AKIAVFYPMCWH2WGC6NVC"
os.environ['AWS_SECRET_ACCESS_KEY'] = "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"
os.environ['AWS_REGION'] = "us-east-1"

def start_stop_instances(instance_ids, ec2_resource):
    started_count = 0
    stopped_count = 0

    for instance_id in instance_ids:
        instance_id = instance_id.strip().lower()

        if instance_id == 'end':
            break

        try:
            instance = ec2_resource.Instance(instance_id)
            instance_name = get_instance_name(instance)

            if instance.state['Name'] == 'running':
                instance.stop()
                print(f"{{{instance_id}}} {{{instance_name}}} stopped successfully.")
                stopped_count += 1
            elif instance.state['Name'] == 'stopped':
                instance.start()
                print(f"{{{instance_id}}} {{{instance_name}}} started successfully.")
                started_count += 1
            else:
                print(f"Instance {{{instance_id}}} is in an unexpected state: {instance.state['Name']}")

        except Exception as e:
            print(f"Error processing instance {{{instance_id}}}: {str(e)}")

    return started_count, stopped_count

def get_instance_name(instance):
    for tag in instance.tags:
        if tag['Key'] == 'Name':
            return tag['Value']
    return 'Unnamed Instance'

def main():
    # Create an EC2 resource with specified credentials and region
    ec2_resource = boto3.resource('ec2')

    instance_ids = []
    print("Enter an instance ID (or 'end' to finish):")

    while True:
        input_line = input().strip().lower()
        instance_ids.append(input_line)

        if input_line == 'end':
            break

    instance_ids.pop()  # Remove the 'end' from the list

    started_count, stopped_count = start_stop_instances(instance_ids, ec2_resource)

    print(f"\nSummary:")
    print(f"Total instances started: {started_count}")
    print(f"Total instances stopped: {stopped_count}")

if __name__ == "__main__":
    main()
